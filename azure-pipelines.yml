trigger:
  branches:
    include:
      - feature/ci-test

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: ai-study-vg
  - group: ai-study-secrets

stages:
  - stage: BuildAndPush
    displayName: 'Build and Push Docker Images to ACR'
    jobs:
      - job: BuildAndPush_Backend
        displayName: 'Build and Push Backend Service'
        
        steps:
          - checkout: self

          # Maven build to generate the backend WAR file
          - task: Maven@4
            inputs:
              mavenPomFile: 'backend/pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.17'   # JDK Version set to 17
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              goals: 'clean package'
          
          # Publish the WAR file as an artifact
          - publish: backend/target/backend.war
            artifact: backend_war
          
          # Docker build and push using the published WAR file
          - task: Docker@2
            inputs:
              containerRegistry: '$(DockerRegistry)'
              repository: '$(AcrName).azurecr.io/aistudy/backend'
              command: 'buildAndPush'
              Dockerfile: 'backend/Dockerfile'
              buildContext: 'backend'
              tags: 'latest'

      - job: BuildFrontend
        steps:
          - task: Npm@1
            inputs:
              command: 'custom'
              workingDir: 'frontend'
              customCommand: 'npm install && npm run build'

          - publish: 'frontend/build'
            artifact: frontend

  - stage: DeployToAKS
    displayName: 'Deploy Services to AKS'
    dependsOn: BuildAndPush
    jobs:
      - job: Deploy_Backend_AKS
        displayName: 'Deploy Backend to AKS'
        
        steps:
          # Deploy to AKS
          - task: KubernetesManifest@1
            inputs:
              action: 'deploy'
              connectionType: 'azureResourceManager'
              azureSubscriptionConnection: '$(AzureSubscription)'
              azureResourceGroup: '$(ResourceGroupName)'
              kubernetesCluster: '$(AKS)'
              manifests: 'backend/backend-deployment.yml'
              containers: '$(AcrName).azurecr.io/aistudy/backend:latest'
          
          - task: KubernetesManifest@1
            inputs:
              action: 'deploy'
              connectionType: 'azureResourceManager'
              azureSubscriptionConnection: '$(AzureSubscription)'
              azureResourceGroup: '$(ResourceGroupName)'
              kubernetesCluster: '$(AKS)'
              manifests: 'frontend/frontend-deployment.yml'
              containers: '$(AcrName).azurecr.io/aistudy/frontend:latest'
